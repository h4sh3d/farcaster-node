name: Create and publish release

on:
  pull_request:
    types:
      - closed

jobs:
  produce_binaries:
    name: Compile released binaries
    if: github.event.pull_request.merged == true && startsWith(github.event.pull_request.head.ref, 'release/')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Install dependencies
        run: sudo apt-get install -y libssl-dev pkg-config build-essential cmake

      - name: Install latest stable
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Build released binaries
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --bins --all-features --release

      - name: Prepare zip file
        uses: papeloto/action-zip@v1
        with:
          files: target/release/address target/release/farcasterd target/release/peerd target/release/swap-cli target/release/swapd target/release/syncerd target/release/walletd
          recursive: false
          dest: ubuntu-latest-bins.zip

      - name: Archive release bins
        uses: actions/upload-artifact@v3
        with:
          name: release-ubuntu-latest-bins
          path: ubuntu-latest-bins.zip
          retention-days: 7

  create_release:
    name: Create from merged release branch
    uses: farcaster-project/workflows/.github/workflows/create-release.yml@v1.0.2
    # Do not run before uploading the binaries
    needs: produce_binaries
    with:
      artifact_name: release-ubuntu-latest-bins
      files: ubuntu-latest-bins.zip

    #release_to_crates:
    #  name: Publish the new release to crates.io
    #  uses: farcaster-project/workflows/.github/workflows/release-to-crates-io.yml@v1.0.2
    #  # Do not run before creating the release is done
    #  needs: create_release
    #  secrets:
    #    cratesio_token: ${{ secrets.H4SH3D_CARGO_REGISTRY_TOKEN }}

  faracsterd_image:
    name: Farcasterd Docker image
    runs-on: ubuntu-latest
    # Do not run before creating the release is done
    needs: create_release

    steps:
    - uses: actions/checkout@v2

    - name: Extract version from branch name
      id: extract-version
      shell: python
      run: |
        branch_name = "${{ github.event.pull_request.head.ref }}"
        version = branch_name.split("/")[1]

        print(f"::set-output name=version::{version}")

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Docker build
      run: docker build -f $GITHUB_WORKSPACE/Dockerfile -t ghcr.io/farcaster-project/farcaster-node/farcasterd:${{ steps.extract-version.outputs.version }} -t ghcr.io/farcaster-project/farcaster-node/farcasterd:latest $GITHUB_WORKSPACE

    - name: Docker push to GitHub Packages (latest)
      run: docker push ghcr.io/farcaster-project/farcaster-node/farcasterd:latest

    - name: Docker push to GitHub Packages (release)
      run: docker push ghcr.io/farcaster-project/farcaster-node/farcasterd:${{ steps.extract-version.outputs.version }}
